uses Graph, Crt, SysUtils;
const
  S = 10;
  R = 40;
  C = 40;
  Xs = (C + 2) * S; Ys = 20;
  MaxLen = 1000;
var
  i, j, x, y, dx, dy, bp, poi, t, gd, gm: integer;
  ch: char; endf: boolean;
  F: array[1..R, 1..C] of integer;
  taR, taC: array[1..MaxLen] of integer;

procedure dC(rw, cl, col: integer);
begin
  SetFillStyle(SolidFill, col); Bar((cl - 1) * S, (rw - 1) * S, cl * S, rw * S);
  SetColor(Black); Rectangle((cl - 1) * S, (rw - 1) * S, cl * S, rw * S);
end;

procedure scr;
begin
  for i := 1 to R do
    for j := 1 to C do begin F[i, j] := 0; dC(i, j, black); end;
  poi := 0; t := 0; bp := 1; endf := False;
  SetFillStyle(SolidFill, Black);
  Bar(Xs - 10, 0, Xs + 150, Ys + 30);
  SetColor(White); SetTextStyle(DefaultFont, HorizDir, 2);
  OutTextXY(Xs, Ys, 'poi: ' + IntToStr(poi));
end;

procedure spf;
var r, c, tries: integer;
begin
  tries := 0;
  repeat
    r := Random(R) + 1; c := Random(C) + 1;
    Inc(tries);
    if tries > 5000 then Exit;
  until F[r, c] = 0;
  if F[r, c] = 0 then begin
    F[r, c] := 9; dC(r, c, Red);
  end;
end;

procedure edb;
begin
  SetColor(Red);
  SetTextStyle(DefaultFont, HorizDir, 3);
  OutTextXY((C * S) div 2 - 100, (R * S) div 2, 'end.');
  Delay(1000);
  SetFillStyle(SolidFill, Black);
  Bar((C * S) div 2 - 100, (R * S) div 2 - 20, (C * S) div 2 + 100, (R * S) div 2 + 20);
end;

begin
  Randomize;
  gd := Detect;
  InitGraph(gd, gm, '');
  repeat
    scr; x := R div 2; y := C div 2; dx := 0; dy := 1; F[x, y] := 2; dC(x, y, Yellow); spf;
    while not endf do begin
      if KeyPressed then
      begin
        ch := ReadKey;
        if ch = #27 then begin CloseGraph; Halt; end;
        if ch = #0 then
        begin
          ch := ReadKey;
          case ch of
            #72: begin dx := -1; dy := 0; end;
            #80: begin dx := 1;  dy := 0; end;
            #75: begin dx := 0;  dy := -1; end;
            #77: begin dx := 0;  dy := 1; end;
          end;
        end;
      end;
      Inc(t);
      if t < MaxLen then
      begin
        taR[t] := x; taC[t] := y;
      end
      else
      begin
        endf := True; edb; Break;
      end;

      dC(x, y, LightGreen);
      x := x + dx; y := y + dy;
      if x < 1 then x := R else if x > R then x := 1;
      if y < 1 then y := C else if y > C then y := 1;
      if F[x, y] = 9 then
      begin
        Inc(poi);
        SetFillStyle(SolidFill, Black);
        Bar(Xs - 10, 0, Xs + 150, Ys + 30);
        SetColor(White); SetTextStyle(DefaultFont, HorizDir, 2);
        OutTextXY(Xs, Ys, 'poi: ' + IntToStr(poi));
        if (poi mod 5 = 0) and (bp = poi div 5) then begin Inc(bp); spf; end;
        spf;
      end;
      if F[x, y] = 2 then begin endf := True; edb; Break; end;
      F[x, y] := 2;
      dC(x, y, Yellow);

      if (t > poi + 1) and (t > 0) then
      begin
        dC(taR[1], taC[1], black);
        F[taR[1], taC[1]] := 0;
        for i := 1 to t - 1 do
        begin
          taR[i] := taR[i + 1];
          taC[i] := taC[i + 1];
        end;
        Dec(t);
      end;
      Delay(100);
    end;
  until False;
  CloseGraph;
end.
